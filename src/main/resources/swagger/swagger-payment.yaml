swagger: '2.0'
info:
  version: '1.0.0'
  title: "Payment API"
host: 'sensedia.com'
basePath: "/payment/v1"
tags:
  - name: Clients
    description: "Operations about clients."
  - name: Payments
    description: "Operations about payments."
schemes:
  - https
paths:
  '/clients':
    post:
      tags:
        - Clients
      summary: "New client"
      description: "Client creation."
      parameters:
        - name: client
          in: body
          required: true
          description: "Client's information"
          schema:
            $ref: '#/definitions/ClientRequest'
      produces:
        - application/json
      consumes:
        - application/json
      responses:
        201:
          description: "Created"
          headers:
            Location:
              type: string
              description: Location to get client information
        412:
          description: Precondition Failed
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'  
        422:
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Server error
    get:
      tags: 
        - Clients
      summary: "Get all clients"
      description: "Get all clients"
      parameters:
        - name: document
          in: query
          type: string
          description: "Client's document"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ClientResponse'
        204:
          description: No content
        500:
          description: Server error
  '/clients/{clientId}':
    get:
      tags:
        - Clients
      summary: "Find client by id"
      description: "Bring one client by id"
      parameters: 
        - name: clientId
          in: path
          required: true
          type: integer
          description: "Identification of client"
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ClientResponse'
        404:
          description: Not found
        500:
          description: Server error
    put:
      tags:
        - Clients
      summary: "Update client by id"
      description: "Update client by id"
      parameters: 
        - name: clientId
          in: path
          required: true
          type: integer
          description: "Identification of client"
        - name: client
          in: body
          required: false
          description: "Client's information to update"
          schema:
            $ref: '#/definitions/ClientRequest'
      responses:
        204:
          description: No content
        404:
          description: Not found
        412:
          description: Precondition Failed
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'  
        422:
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Server error
    patch:
      tags: 
        - Clients
      summary: "Partial update on client's information by id" 
      description: "Partial update on client's information by id"
      parameters: 
        - name: clientId
          in: path
          required: true
          type: integer
          description: "Identification of client"
        - name: client
          in: body
          required: false
          description: "Client's information to partial update"
          schema:
            $ref: "#/definitions/OptionalClientRequest"
      responses:
        204:
          description: No content
        404:
          description: Not found
        422:
          description: Unprocessable Entity
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        500: 
          description: Server error
    delete:
      tags:
        - Clients
      summary: "Delete client by id"
      description: "Delete client by id"
      parameters: 
        - name: clientId
          in: path
          required: true
          type: integer
          description: "Identification of client"
      responses:
        204:
          description: No content
        404:
          description: Not found
        500:
          description: Server error
  '/clients/{clientId}/debits':
    post:
      tags:
        - Clients
      summary: "New debit"
      description: "Debit creation."
      parameters:
        - name: clientId
          in: path
          type: string
          required: true
          description: "Identification of client"
        - name: debit
          in: body
          required: true
          description: "Debit's information"
          schema:
            $ref: '#/definitions/DebitRequest'
      consumes:
        - application/json
      responses:
        201:
          description: "Created"
          headers:
            Location:
              type: string
              description: Location to get debit information
        404:
          description: Not Found
        412:
          description: Precondition Failed
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'  
        422:
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Server error
    get:
      tags:
        - Clients
      summary: "Find client debits"
      description: "Client debits"
      parameters: 
        - name: clientId
          in: path
          type: string
          required: true
          description: "Identification of client"
      produces:
        - application/json
      responses:
        200:
          description: Ok
          schema:
            type: array
            items:
              $ref: '#/definitions/DebitResponse'
        204:
          description: No content
        404:
          description: Not found
        500:
          description: Server error
  '/clients/{clientId}/debits/{debitId}':
    get:
      tags:
        - Clients
      summary: "Find client debit"
      description: "Client debit"
      parameters: 
        - name: clientId
          in: path
          type: string
          required: true
          description: "Identification of client"
        - name: debitId
          in: path
          type: string
          required: true
          description: "Identification of debit"
      produces:
        - application/json
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/DebitResponse'
        404:
          description: Not found
        500:
          description: Server error
  '/payments':
    post:
      tags:
        - Payments
      summary: "New payment"
      description: "Payment"
      parameters:
        - name: payment
          in: body
          required: true
          description: "Identification of client"
          schema:
            $ref: '#/definitions/PaymentRequest'
      consumes:
        - application/json
      responses:
        201:
          description: "Created"
        412:
          description: Precondition Failed
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'  
        422:
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Server error
definitions:
  ClientRequest:
    properties: 
      document:
        type: number
      name: 
        type: string
      email: 
        type: string
      phone: 
        type: boolean
      expirationDay: 
        type: number
    required:
      - document
      - name
      - email
      - phone
      - expirationDay
  OptionalClientRequest:
    properties: 
      document:
        type: number
      name: 
        type: string
      email: 
        type: string
      phone: 
        type: boolean
      expirationDay: 
        type: number
  ClientResponse:
    type: object
    properties: 
      document: 
        type: number
      name: 
        type: string
      email: 
        type: string
      phone: 
        type: boolean
      expirationDay: 
        type: number
  DebitRequest:
    properties:
      productId:
        type: string
        example: "2c8c5d94-4261-4869-ac81-240a437fbc0f"
      value:
        type: number
        example: 79.99
      installmentsNumber:
        type: number
        example: 1
  DebitResponse:
    properties:
      id:
        type: string
        example: "d2c4d413-c0e6-4125-b201-7b0cdb447020"
      productId:
        type: string
        example: "2c8c5d94-4261-4869-ac81-240a437fbc0f"
      value:
        type: number
        example: 79.99
      installmentsNumber:
        type: number
        example: 1
      installments:
        type: array
        items:
          $ref: '#/definitions/InstallmentResponse'
  InstallmentResponse:
    properties:
      value:
        type: number
        example: 15.99
      status:
        type: string
        example: 'PAID'
        enum: [PENDING, PAID]
      expirationDate:
        type: string
        example: '2019-01-01'
      payday:
        type: string
        example: '2019-01-01T10:04:57'
      paidValue:
        type: number
        example: 15.19
      discountPercentage:
        type: number
        example: 5
  PaymentRequest:
    properties:
      debitId:
        type: string
        example: "c2caee39-e49c-4233-b88f-a2450c7b7a02"
      installments:
        type: number
        example: 1
      cardNumber:
        type: string
        example: '1111222233334444'
  Error:
    type: object
    properties:
      code:
        type: string
        description: Error code
      message:
        type: string
        description: Error message